<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.work7.mutlidatasource.mapper.TOrderMapper">
  <resultMap id="BaseResultMap" type="com.work7.mutlidatasource.domain.TOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="order_price" jdbcType="REAL" property="orderPrice" />
    <result column="order_time" jdbcType="BIGINT" property="orderTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
    <result column="order_desc" jdbcType="VARCHAR" property="orderDesc" />
    <result column="user_mark" jdbcType="VARCHAR" property="userMark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, order_num, order_price, order_time, status, address_id, order_desc, 
    user_mark
  </sql>
  <select id="selectByExample" parameterType="com.work7.mutlidatasource.domain.TOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.work7.mutlidatasource.domain.TOrderExample">
    delete from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.work7.mutlidatasource.domain.TOrder">
    insert into t_order (id, user_id, order_num, 
      order_price, order_time, status, 
      address_id, order_desc, user_mark
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, 
      #{orderPrice,jdbcType=REAL}, #{orderTime,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{addressId,jdbcType=INTEGER}, #{orderDesc,jdbcType=VARCHAR}, #{userMark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.work7.mutlidatasource.domain.TOrder">
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
      <if test="orderDesc != null">
        order_desc,
      </if>
      <if test="userMark != null">
        user_mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=REAL},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="orderDesc != null">
        #{orderDesc,jdbcType=VARCHAR},
      </if>
      <if test="userMark != null">
        #{userMark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.work7.mutlidatasource.domain.TOrderExample" resultType="java.lang.Long">
    select count(*) from t_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPrice != null">
        order_price = #{record.orderPrice,jdbcType=REAL},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.orderDesc != null">
        order_desc = #{record.orderDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.userMark != null">
        user_mark = #{record.userMark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_order
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      order_price = #{record.orderPrice,jdbcType=REAL},
      order_time = #{record.orderTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER},
      order_desc = #{record.orderDesc,jdbcType=VARCHAR},
      user_mark = #{record.userMark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.work7.mutlidatasource.domain.TOrder">
    update t_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=REAL},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="orderDesc != null">
        order_desc = #{orderDesc,jdbcType=VARCHAR},
      </if>
      <if test="userMark != null">
        user_mark = #{userMark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.work7.mutlidatasource.domain.TOrder">
    update t_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_num = #{orderNum,jdbcType=VARCHAR},
      order_price = #{orderPrice,jdbcType=REAL},
      order_time = #{orderTime,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      order_desc = #{orderDesc,jdbcType=VARCHAR},
      user_mark = #{userMark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertList" parameterType="java.util.List" useGeneratedKeys="true">
    insert into t_order (user_id, order_num,
      order_price, order_time, status,
      address_id, order_desc, user_mark
      ) values
    <foreach collection="records" item="order" separator=",">
      (#{order.userId,jdbcType=INTEGER}, #{order.orderNum,jdbcType=VARCHAR},
      #{order.orderPrice,jdbcType=REAL}, #{order.orderTime,jdbcType=BIGINT}, #{order.status,jdbcType=INTEGER},
      #{order.addressId,jdbcType=INTEGER}, #{order.orderDesc,jdbcType=VARCHAR}, #{order.userMark,jdbcType=VARCHAR})
    </foreach>
  </insert>

</mapper>